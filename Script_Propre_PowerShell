#Fonction 1 :
# - Création compte utilisateur local 
# - Changement de mot de passe 
# - Suppression compte utilisateur local
# - Désactivation compte utilisateur local 
function utilisateur_local
{

$utilisateur_local = @"
    Taper 1 pour créer un compte utilisateur 
    Taper 2 pour changer le mot de passe 
    Taper 3 pour supprimer un compte utilisateur 
    Taper 4 pour désactiver un compte
"@

Write-Host $utilisateur_local

    $choix = Read-Host -Prompt "choix ?"

    switch ($choix)
    {
        1 
        {
            $choix1 = Read-Host -Prompt "Quel est le nom du nouvel utilisateur ?"
            New-LocalUser $choix1
        }
        
        2 
        {
        $choix2 = Read-Host -Prompt "De quel compte voulez vous modifier le mot de passe ?"
        $choix3 = Read-Host -Prompt "Quel est le nouveau mot de passe ?" -AsSecureString
        #$choix3 = $choix3Text | ConvertTo-SecureString -AsPlainText -Force
        #la commande marche pas alors que ca devrait. bizarre
        Get-LocalUser -Name $choix2 | Set-LocalUser -Password $choix3
        }
        
        3 
        {
        $choix4 = Read-Host -Prompt "Quel utilisateur voulez vous supprimer ?"
        Remove-LocalUser -Name $choix4
        }
        
        4 
        {
        $choix5 = Read-Host -Prompt "Quel utilisateur voulez vous bloquer ?"
        Disable-LocalUser -Name $choix5
        }
        
        default 
        { 
        Write-Host "Je ne comprends pas" 
        }
    }
}



#Fonction 2 : 
# - Ajout à un groupe local 
# - Sortie d'un groupe local 
function groupe_local
{

$groupe_local = @"
Tapez 1 pour vous ajouter a un groupe local
Taper 2 pour sortir d'un groupe local
"@

Write-Host $groupe_local

$choix_groupe_local = Read-Host -Prompt "Que voulez vous faire ?"

    switch ($choix_groupe_local)
    {
        1 
        { 
        $choix_groupe_local1 = Read-Host -Prompt "Quel groupe voulez vous intégrer ?"
        #donner la liste des groupes ? get-localgroup
        $choix_groupe_local2 = Read-Host -Prompt "Quel utilisateur voulez vous intégrer au groupe $choix_groupe_local1 ?"
        #donner liste utilisateur ? get-localuser
        add-localgroupmember -group $choix_groupe_local1 -Member $choix_groupe_local2
        }

        2 
        { 
        $choix_groupe_local3 = Read-Host -Prompt "Quel groupe voulez vous quitter ?"
        $choix_groupe_local4 = Read-Host -Prompt "Quel utilisateur voulez vous faire quitter le groupe $choix_groupe_local3 ?"
        remove-localgroupmember -group $choix_groupe_local3 -Member $choix_groupe_local4
        }
    }

}



#Fonction 3 : 
# - Arret 
# - Redémarrage 
# - Vérouillage 

function shut 
{

$shut = @"
Tapez 1 pour éteindre le système 
Tapez 2 pour redémarrer le système
Tapez 3 pour vérrouiller le système
"@

Write-Host $shut

$choix_shut = Read-Host -Prompt "Que voulez vous faire ?"

    switch ($choix_shut)
    {
        1 
        { 
        stop-computer 
        }

        2 
        {
        restart-computer 
        }

        3 
        { 
        rundll32.exe user32.dll,LockWorkStation 
        }

    }
}



#Fonction 5 :
# - Création de répertoire 
# - Modification de repertoire 
# - -Suppression de répertoire 
function repertoire
{

$repertoire = @"
Taper 1 pour créer un dossier
Taper 2 pour modifier un dossier 
Taper 3 pour supprimer un dossier
"@

Write-Host $repertoire

$choix_repertoire = Read-Host -Prompt "Que voulez vous faire ?"

switch ($choix_repertoire)
    {

    1 
        { 
        $choix_repertoire1 = Read-Host -Prompt "Comment voulez vous appeler le dossier ?"
        new-item -itemType Directory -name $choix_repertoire1 
        #laisser a l'utilisateur le choix de la localisation du dossier ?
        }

    2 
        { 
        $choix_repertoire2 = Read-Host -Prompt "Quel dossier voulez vous modifier ? Veuillez mettre le chemin avec le nom"
        $choix_repertoire3 = Read-Host -Prompt "Par quel nom voulez vous le remplacer ?"
        rename-item -path $choix_repertoire2 -newname $choix_repertoire3
        }

    3 
        { 
        $choix_repertoire4 = Read-Host -Prompt "Quel dossier voulez vous supprimer ? Veuillez mettre le chemin avec le nom"
        remove-item $choix_repertoire4
        }

    }

}



# Fonction 7 : 
# - Définition de règle de pare-feu 
# - Activation du pare-feu
# - Désactivation du pare feu 
function pare_feu
{

$pare_feu = @"
1) Définition de règle de pare feu
2) Activation de pare feu
3) Désactivation de pare feu
"@

Write-Host $pare_feu

$choix_pare_feu = Read-Host -Prompt "Que voulez vous faire ?"

    switch ($choix_pare_feu)
    {
        1
        {
        $choix_pare_feu1 = Read-Host -Prompt "Quel règle voulez vous définir ? Veuiller enseigner :
        -Name 
        -DisplayName 
        -Profile 
        -Enabled 
        -Protocol 
        -LocalPort 
        -Action 
        -LocalAddress 
        Exemple : -Name ""SSH"" -DisplayName ""Autoriser SSH (Port 22)"" -Profile Domain -Enabled True -Protocol TCP -LocalPort 22 -Action Allow -LocalAddress 192.168.100.13"
        New-NetFirewallRule $choix_pare_feu1
        }

        2
        {
        Set-NetFirewallProfile -Profile * -Enabled True
        }

        3
        {
        Set-NetFirewallProfile -Profile * -Enabled False
        }

    }    
}
